name: Build
on: 
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_API_KEY }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.300'

      - name: Build
        run: dotnet build dotnet-project-file-analyzers.slnx -c Release

      - name: Test
        run: dotnet test dotnet-project-file-analyzers.slnx -c Release --no-build --filter TestCategory!=Generators

      - name: DotNet Pack
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          echo Version: $VERSION
          VERSION="${VERSION//v}"
          echo Clean Version: $VERSION
          dotnet pack dotnet-project-file-analyzers.slnx -v normal --no-build --no-restore -p:Version=$VERSION -c Release --output packages
   
      - name: Upload Artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: packages/*.nupkg
  
  publish:
    name: Publish
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkg

      - name: Create release notes
        uses: johnyherangi/create-release-notes@main
        id: create-release-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.create-release-notes.outputs.release-notes }}
          draft: false
          prerelease: ${{ contains(github.ref, '-') }}

      - name: DotNet NuGet Push  
        run: dotnet nuget push "*.nupkg" --source ${{ env.NUGET_FEED}} --api-key ${{ env.NUGET_KEY }} --skip-duplicate --no-symbols    
