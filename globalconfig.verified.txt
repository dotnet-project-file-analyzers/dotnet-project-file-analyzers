dotnet_diagnostic.Proj0001.severity = warning    # The project file '{0}' could not be located
dotnet_diagnostic.Proj0002.severity = warning    # Upgrade legacy MS Build project file
dotnet_diagnostic.Proj0003.severity = warning    # Define usings explicit
dotnet_diagnostic.Proj0004.severity = warning    # Run NuGet security audits automatically
dotnet_diagnostic.Proj0005.severity = warning    # Define package reference assets of '{0}' as attributes
dotnet_diagnostic.Proj0006.severity = none       # Add '{0}' to the additional files
dotnet_diagnostic.Proj0007.severity = warning    # Remove empty {0} node
dotnet_diagnostic.Proj0008.severity = warning    # Remove folder node '{0}'
dotnet_diagnostic.Proj0009.severity = warning    # Use the <TargetFramework> node instead
dotnet_diagnostic.Proj0010.severity = warning    # Define the <OutputType> node explicitly
dotnet_diagnostic.Proj0011.severity = warning    # Property <{0}> has been already defined
dotnet_diagnostic.Proj0012.severity = warning    # Property <{0}> has been previously defined with the same value
dotnet_diagnostic.Proj0013.severity = warning    # Package '{0}' is already referenced
dotnet_diagnostic.Proj0014.severity = warning    # Project '{0}' is already referenced
dotnet_diagnostic.Proj0015.severity = warning    # Package '{0}' is not ordered alphabetically and should appear before '{1}'
dotnet_diagnostic.Proj0016.severity = warning    # Project '{0}' is not ordered alphabetically and should appear before '{1}'
dotnet_diagnostic.Proj0017.severity = error      # Using directive for '{0}' can not be both an alias and static
dotnet_diagnostic.Proj0018.severity = warning    # {0} directive for '{1}' should appear before {2} directive for '{3}'
dotnet_diagnostic.Proj0019.severity = warning    # {0} directive '{1}' is not ordered alphabetically and should appear before '{2}'
dotnet_diagnostic.Proj0020.severity = warning    # <ItemGroup> should only contain nodes of a single type
dotnet_diagnostic.Proj0021.severity = warning    # The <{0}> defines multiple tasks
dotnet_diagnostic.Proj0022.severity = warning    # The Include '{0}' of <{1}> does not {2}
dotnet_diagnostic.Proj0023.severity = warning    # <{0} {1}> contains backward slashes
dotnet_diagnostic.Proj0024.severity = warning    # Package version for '{0}' is not ordered alphabetically and should appear before '{1}'
dotnet_diagnostic.Proj0025.severity = warning    # Migrate ruleset '{0}' to an .editorconfig file
dotnet_diagnostic.Proj0026.severity = warning    # Remove {0} as it is redundant when all assets are private
dotnet_diagnostic.Proj0027.severity = warning    # This <TargetFramework> will be ignored due to the earlier use of <TargetFrameworks>
dotnet_diagnostic.Proj0028.severity = warning    # Move the condition to the parent <{0}>
dotnet_diagnostic.Proj0029.severity = warning    # The property <{0}> is only applicable when using C# and can therefor be removed
dotnet_diagnostic.Proj0030.severity = warning    # The property <{0}> is only applicable when using VB.NET and can therefor be removed
dotnet_diagnostic.Proj0031.severity = warning    # The node <{0}> has a different casing than the preferred one <{1}>
dotnet_diagnostic.Proj0032.severity = warning    # Migrate away from BinaryFormatter and do not enable <{0}>
dotnet_diagnostic.Proj0033.severity = warning    # The Include '{0}' of <{1}> does not exist
dotnet_diagnostic.Proj0034.severity = warning    # The <Import> '{0}' could not be resolved by the analyzer
dotnet_diagnostic.Proj0035.severity = warning    # Remove the <RestoreProjectStyle> property
dotnet_diagnostic.Proj0036.severity = warning    # Remove <None> as it is redundant
dotnet_diagnostic.Proj0037.severity = warning    # ExcludeAssets should contain runtime when PrivateAssets="all"
dotnet_diagnostic.Proj0200.severity = warning    # Define the <IsPackable> node explicitly
dotnet_diagnostic.Proj0201.severity = warning    # Define the <Version> or <VersionPrefix> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0202.severity = warning    # Define the <Description> or <PackageDescription> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0203.severity = warning    # Define the <Authors> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0204.severity = warning    # Define the <PackageTags> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0205.severity = warning    # Define the <RepositoryUrl> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0206.severity = warning    # Define the <PackageProjectUrl> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0207.severity = warning    # Define the <Copyright> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0208.severity = warning    # Define the <PackageReleaseNotes> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0209.severity = warning    # Define the <PackageReadmeFile> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0210.severity = warning    # Define the <PackageLicenseExpression> or <PackageLicenseFile> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0211.severity = warning    # Replace deprecated <PackageLicenseUrl> with <PackageLicenseExpression> or <PackageLicenseFile> node
dotnet_diagnostic.Proj0212.severity = warning    # Define the <PackageIcon> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0213.severity = warning    # Define the <PackageIconUrl> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0214.severity = suggestion # Define the <PackageId> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0215.severity = warning    # The package icon '{0}' {1}
dotnet_diagnostic.Proj0216.severity = warning    # Define the <ProductName> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0217.severity = warning    # Define the <PackageRequireLicenseAcceptance> node explicitly or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0240.severity = warning    # Define the <EnablePackageValidation> node with value 'true' or define the <IsPackable> node with value 'false' or define the <DevelopmentDependency> node with value 'false'
dotnet_diagnostic.Proj0241.severity = warning    # Define the <PackageValidationBaselineVersion> node with a previously released stable version
dotnet_diagnostic.Proj0242.severity = warning    # Add a condition to <GeneratePackageOnBuild>
dotnet_diagnostic.Proj0243.severity = warning    # {0} or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0244.severity = warning    # Define the <GenerateDocumentationFile> node with value 'true' or define the <DocumentationFile> node with a valid file path or define the <IsPackable> node with value 'false'
dotnet_diagnostic.Proj0245.severity = warning    # Remove the <Version> node or remove the {0}
dotnet_diagnostic.Proj0246.severity = warning    # Define the <VersionPrefix> node or remove the <VersionSuffix> node
dotnet_diagnostic.Proj0247.severity = warning    # Define the <EnableStrictModeForBaselineValidation> node with value 'true' or remove the <PackageValidationBaselineVersion> node or remove the <EnablePackageValidation> node with value 'true'
dotnet_diagnostic.Proj0248.severity = warning    # Define the <EnableStrictModeForCompatibleTfms> node with value 'true' or remove the <EnableStrictModeForCompatibleTfms> node with value 'false' or remove the <EnablePackageValidation> node with value 'true'
dotnet_diagnostic.Proj0249.severity = warning    # Define the <EnableStrictModeForCompatibleFrameworksInPackage> node with value 'true' or remove the <EnablePackageValidation> node with value 'true'
dotnet_diagnostic.Proj0250.severity = warning    # Define the <ApiCompatGenerateSuppressionFile> node with value 'true' or remove the <EnablePackageValidation> node with value 'true'
dotnet_diagnostic.Proj0251.severity = warning    # Define the <ApiCompatEnableRuleAttributesMustMatch> node with value 'true' or remove the <EnablePackageValidation> node with value 'true'
dotnet_diagnostic.Proj0252.severity = warning    # Define the <ApiCompatEnableRuleCannotChangeParameterName> node with value 'true' or remove the <EnablePackageValidation> node with value 'true'
dotnet_diagnostic.Proj0400.severity = warning    # Define the <IsPublishable> node explicitly
dotnet_diagnostic.Proj0450.severity = warning    # Set <IsPackable> to false
dotnet_diagnostic.Proj0451.severity = warning    # Set <IsPublishable> to false
dotnet_diagnostic.Proj0452.severity = warning    # Include <PackageReference Include="Microsoft.NET.Test.Sdk" PrivateAssets ="all" />
dotnet_diagnostic.Proj0453.severity = warning    # Set <IsTestProject> to true
dotnet_diagnostic.Proj0500.severity = warning    # The {0} package is shipped without an explicitly defined license
dotnet_diagnostic.Proj0501.severity = warning    # The {0} package only contains a deprecated license URL
dotnet_diagnostic.Proj0502.severity = warning    # The {0} package is distributed as {1}, which is imcompatable with the {2} license of the project
dotnet_diagnostic.Proj0503.severity = warning    # Add <ThirdPartyLicense Include="{0}" Hash="{0}" /> to accept the license
dotnet_diagnostic.Proj0504.severity = warning    # The license for {0} has changed as its hash is now {1}
dotnet_diagnostic.Proj0505.severity = error      # Include {0}
dotnet_diagnostic.Proj0506.severity = error      # Hash {0}
dotnet_diagnostic.Proj0507.severity = error      # The <ThirdPartyLicense> can not be conditional
dotnet_diagnostic.Proj0600.severity = warning    # Avoid defining <GeneratePackageOnBuild> node explicitly when <IsPackable> is 'false'
dotnet_diagnostic.Proj0700.severity = warning    # The .net.csproj SDK project should not contain <Compile> items
dotnet_diagnostic.Proj0800.severity = warning    # Define the <ManagePackageVersionsCentrally> node with the value 'true', or 'false'
dotnet_diagnostic.Proj0801.severity = warning    # The file 'Directory.Packages.props' could not be located
dotnet_diagnostic.Proj0802.severity = warning    # Enable <ManagePackageVersionsCentrally> in 'Directory.Packages.props' or a shared props file
dotnet_diagnostic.Proj0803.severity = warning    # Use Version instead of VersionOverride when CPM is not enabled
dotnet_diagnostic.Proj0804.severity = warning    # Do not use Version when CPM is enabled
dotnet_diagnostic.Proj0805.severity = warning    # Define version for '{0}' PackageReference
dotnet_diagnostic.Proj0806.severity = warning    # Remove VersionOverride or change it to a version different than defined by the CPM
dotnet_diagnostic.Proj0807.severity = warning    # As <{0}> is not about Central Package Management it should not be in Directory.Packages.props
dotnet_diagnostic.Proj0808.severity = warning    # The <GlobalPackageReference> should be defined in the Directory.Packages.props
dotnet_diagnostic.Proj0809.severity = warning    # The global package reference '{0}' is not supposed to be a private asset
dotnet_diagnostic.Proj0810.severity = warning    # Remove unused <PackageVersion> '{0}'
dotnet_diagnostic.Proj1000.severity = none       # Use the .NET project file analyzers
dotnet_diagnostic.Proj1001.severity = warning    # Use {0} to analyze {1}
dotnet_diagnostic.Proj1002.severity = warning    # Use Microsoft's .NET analyzers by setting <EnableNETAnalyzers> to true
dotnet_diagnostic.Proj1003.severity = warning    # Add {0}
dotnet_diagnostic.Proj1100.severity = none       # Do not use Moq
dotnet_diagnostic.Proj1101.severity = warning    # Use a stable version of '{0}', instead of '{1}'
dotnet_diagnostic.Proj1102.severity = warning    # Choose either coverlet.collector or coverlet.msbuild
dotnet_diagnostic.Proj1103.severity = warning    # Set <OutputType> to exe to run the TUnit tests
dotnet_diagnostic.Proj1104.severity = warning    # Remove either TUnit or Microsoft.NET.Test.Sdk as they can not be combined
dotnet_diagnostic.Proj1200.severity = warning    # Mark the package reference "{0}" as a private asset
dotnet_diagnostic.Proj1700.severity = warning    # The element <{0}> has not been properly indented
dotnet_diagnostic.Proj1701.severity = warning    # Add <![CDATA[ and ]]> around this text
dotnet_diagnostic.Proj1702.severity = warning    # Remove the XML declaration as it is redundant
dotnet_diagnostic.Proj2000.severity = error      # Resource file {0}
dotnet_diagnostic.Proj2001.severity = warning    # Resource does not contain any data
dotnet_diagnostic.Proj2002.severity = warning    # Resource '{0}' is not ordered alphabetically and should appear before '{1}'
dotnet_diagnostic.Proj2003.severity = warning    # Add invariant fallback resource
dotnet_diagnostic.Proj2004.severity = warning    # Add invariant fallback value for '{0}'
dotnet_diagnostic.Proj2005.severity = warning    # Escape the XML node in '{0}'
dotnet_diagnostic.Proj2100.severity = warning    # The element <{0}> has not been properly indented
dotnet_diagnostic.Proj3000.severity = warning    # This file is using UTF-8 encoding with BOM
dotnet_diagnostic.Proj3001.severity = warning    # Complete the task associated to this "{0}" comment
dotnet_diagnostic.Proj3002.severity = warning    # Remove the commented-out code
dotnet_diagnostic.Proj4000.severity = none       # File could not be parsed
dotnet_diagnostic.Proj4001.severity = none       # {0}
dotnet_diagnostic.Proj4002.severity = none       # {0}
dotnet_diagnostic.Proj4010.severity = none       # Section [{0}] is empty
dotnet_diagnostic.Proj4050.severity = none       # Header [{0}] is not a valid GLOB
dotnet_diagnostic.Proj4051.severity = none       # Use = instead
